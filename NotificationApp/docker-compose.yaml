version: "3.9"
services:

  nginx:
    container_name: nginx_container
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8098:89
    depends_on:
      - application
    networks:
      - global_notify_app_network

  application:
    container_name: application
    build: .
    env_file:
      - ./project/env_file.env
    depends_on:
      - database
      - backup_database
    networks:
      - global_notify_app_network
    ports:
      - 8099:8099
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8099/healthcheck/"]
      retries: 5
      interval: 10s
      timeout: 10s

  database:
    restart: unless-stopped
    container_name: postgresql_database
    image: postgres:latest
    environment:
      POSTGRES_DB: notification_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Kirill
    ports:
      - 5431:5431
    command:
      - -p 5431
    networks:
      - global_notify_app_network
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "notification_db"]
      retries: 5
      timeout: 10s
      interval: 10s

  backup_database:
    restart: unless-stopped
    container_name: backup_database
    image: postgres:latest
    environment:
      POSTGRES_DB: backup_database
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Kirill
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "backup_database"]
      retries: 5
      timeout: 10s
      interval: 10s
    command:
      - -p 5433
    ports:
      - 5430:5433
    networks:
      - global_notify_app_network

networks:
  global_notify_app_network:
    external: true
    name: global_project_network


