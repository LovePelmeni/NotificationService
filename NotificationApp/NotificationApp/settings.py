"""
Django settings for NotificationApp project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ldw^bsszn512@2l9m!3w5pge#1m#g&01yp(ig3kra3bz)kjdn3'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'main',

    'corsheaders',
    'drf_yasg',

]


MIDDLEWARE = [

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',

    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',

    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'NotificationApp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'NotificationApp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
if DEBUG:

    CORS_ALLOW_ALL_ORIGINS = True
    CORS_ALLOW_CREDENTIALS = True

    BACKUP_DATABASE = 'backup_database'
    MAIN_DATABASE = 'default'

    DATABASES = {

        MAIN_DATABASE: {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'notification_db',
            'USER': 'postgres',
            'PASSWORD': 'Kirill',
            'HOST': 'localhost',
            "PORT": '5434'
        },
        BACKUP_DATABASE : {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'backup_database',
            'USER': 'postgres',
            'PASSWORD': 'Kirill',
            'HOST': 'localhost',
            "PORT": '5434'
        }
    }

    WEB_API_KEY = 'AIzaSyC0SMpVHS-v49h15PfgpyG3ihX-_OG79Go'

    RABBITMQ_USER = 'rabbitmq_user'
    RABBITMQ_PASSWORD = 'rabbitmq_password'
    RABBITMQ_PORT = '5671'
    RABBITMQ_HOST = 'localhost'

    RABBITMQ_NODE2_HOST = 'localhost'
    RABBITMQ_NODE3_HOST = 'localhost'

    RABBITMQ_NODE2_PORT = '5673'
    RABBITMQ_NODE3_PORT = '5674'

    RABBITMQ_VHOST = 'rabbitmq_vhost'

else:

    CORS_ALLOW_ALL_ORIGINS = True
    CORS_ALLOWED_ORIGINS = ["http://%s:3000" % os.environ.get('FRONT_APP_HOST'),
    "http://%s:8077" % os.environ.get('SUBSCRIPTION_SERVICE_HOST'),
    "http://%s:8000" % os.environ.get('PAYMENT_SERVICE_HOST')]

    CORS_ALLOW_CREDENTIALS = True
    CORS_CSRF_TRUSTED_ORIGINS = ["http:%s:3000" % os.environ.get('FRONT_APP_HOST')]
    CORS_ALLOWED_HEADERS = ["*"]
    CORS_ALLOWED_METHODS = ["*"]

    BACKUP_DATABASE = 'backup_database'
    MAIN_DATABASE = 'default'

    DATABASES = {

         MAIN_DATABASE: {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': os.environ.get('POSTGRES_DATABASE'),
            'USER': os.environ.get('POSTGRES_USER'),
            'PASSWORD': os.environ.get("POSTGRES_PASSWORD"),
            'HOST': os.environ.get('POSTGRES_HOST'),
            "PORT": os.environ.get('POSTGRES_PORT')
        },

        BACKUP_DATABASE: {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'notification_backup_db',
            'USER': os.environ.get('BACKUP_POSTGRES_USER'),
            'PASSWORD': os.environ.get('BACKUP_POSTGRES_PASSWORD'),
            'HOST': os.environ.get('BACKUP_POSTGRES_HOST'),
            "PORT": os.environ.get('BACKUP_POSTGRES_PORT')
        }
    }
    WEB_API_KEY = os.environ.get('WEB_API_KEY')

    RABBITMQ_HOST = os.environ.get('RABBITMQ_HOST')
    RABBITMQ_NODE2_HOST = os.environ.get('RABBITMQ_NODE2_HOST')
    RABBITMQ_NODE3_HOST = os.environ.get('RABBITMQ_NODE3_HOST')

    RABBITMQ_NODE2_PORT = os.environ.get('RABBITMQ_NODE2_PORT')
    RABBITMQ_NODE3_PORT = os.environ.get('RABBITMQ_NODE3_PORT')
    RABBITMQ_VHOST = os.environ.get('RABBITMQ_VHOST')



LOGGING = {

'version': 1,
    'disable_existing_loggers': False,

    'formatters': {
        'file_formatter': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
    },

    'handlers': {
        'file_handler': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'file_handler.log',
            'formatter': 'file_formatter'
        },
        'console_handler': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },

        'admin_email_handler': {
            'level': 'WARNING',
            'class': 'django.utils.log.AdminEmailHandler',
        }
    },
    'loggers': {
        'main': {
            'handlers': ['file_handler', 'console_handler', 'admin_email_handler'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
